doctype html
html
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    script(src='https://kit.fontawesome.com/64d58efce2.js' crossorigin='anonymous')
    title Weather Forecast App
    link(rel='stylesheet' href='/admin/CSS/style.css')
    script(src='https://cdn.plot.ly/plotly-latest.min.js')
  body
    .wrapper
      .sidebar
        div
          .group
            b Nh&oacute;m 5
          div
            .dashboard
              div(style='margin-top: 200px; text-align: center')
                button.btn-khigas(style='\
                font-size: 20px;\
                background-color: #caf0f8;\
                border: none;\
                cursor: pointer;\
                ')
                  b C&#x1EA3;m bi&#x1EBF;n kh&iacute; gas
              div(style='margin-top: 20px; margin-bottom: 20px; text-align: center')
                button.btn-nhietdo(style='\
                font-size: 20px;\
                border: none;\
                background-color: #caf0f8;\
                border: none;\
                cursor: pointer;\
                ')
                  b C&#x1EA3;m bi&#x1EBF;n nhi&#x1EC7;t &dstrok;&#x1ED9;
              div(style='text-align: center')
                button.btn-doam(style='\
                font-size: 20px;\
                background-color: #caf0f8;\
                border: none;\
                cursor: pointer;\
                ')
                  b C&#x1EA3;m bi&#x1EBF;n &dstrok;&#x1ED9; &#x1EA9;m
          .weather-icon
            img#icon(src='icons/sun/4.png' alt='')
        .location
          .location-icon
            i.fas.fa-map-marker-alt
          .location-text
            p#location H&agrave; N&#x1ED9;i
      .main
        #weather-cards.cards
        .highlights
          .heading
            | Bi&#x1EC3;u &dstrok;&#x1ED3; c&#x1EA3;m bi&#x1EBF;n
          .cards
            .card1.box-1
              #myDiv(style='width: 100%; height: 100%')
    script.
      const btn_KhiGas = document.querySelector(".btn-khigas");
      const btn_NhietDo = document.querySelector(".btn-nhietdo");
      const btn_DoAm = document.querySelector(".btn-doam");
      btn_KhiGas.addEventListener("click", (event) => {
      window.location.href =
      "http://localhost:3001/admin/dashboard/cambienkhigas";
      });
      btn_NhietDo.addEventListener("click", (event) => {
      window.location.href =
      "http://localhost:3001/admin/dashboard/cambiennhietdo";
      });
      btn_DoAm.addEventListener("click", (event) => {
      window.location.href =
      "http://localhost:3001/admin/dashboard/cambiendoam";
      });
    script.
      function getData() {
      fetch("http://localhost:3000/khigas")
      .then((response) => response.json())
      .then((data) => {
      feeds = data;
      // Lọc ra các mục cụ thể có dữ liệu khiGas
      const dates = feeds.map((feed) => feed.created_at);
      const khiGasValues = feeds.map((feed) => Number(feed.khigas));
      const trace1 = {
      x: dates,
      y: khiGasValues,
      type: "scatter",
      mode: "lines+markers", // Sử dụng chế độ này để vẽ cả đường và điểm
      marker: {
      color: "blue",
      size: 8,
      },
      line: {
      color: "blue",
      width: 2,
      },
      };
      const dataPlotly = [trace1];
      const layout = {
      title: "Biểu Đồ Khí Gas",
      xaxis: {
      title: "Thời Gian",
      },
      yaxis: {
      title: "Khí Gas",
      },
      showlegend: false,
      };
      Plotly.newPlot("myDiv", dataPlotly, layout);
      ///// CANH BAO KHI GAS VUOT QUA 300 / SEND EMAIL
        const latestValue = khiGasValues[khiGasValues.length - 1];
      if (latestValue > 100) {
        // Gửi yêu cầu đến server để gửi email cảnh báo
        fetch("http://localhost:3001/admin/dashboard/sendEmail", {
          method: "POST",
        })
          .then((response) => {
            if (response.ok) {
              alert("Email cảnh báo đã được gửi.");
            } else {
              alert("Không thể gửi email cảnh báo.");
          }
        })
          .catch((error) => {
            alert("Lỗi khi gửi yêu cầu gửi email:", error);
        });
      }
      })
      .catch((error) => console.error("Lỗi:", error));
      }
      getData();
      // Gọi lại hàm getData sau mỗi giây
      setInterval(getData, 5000);